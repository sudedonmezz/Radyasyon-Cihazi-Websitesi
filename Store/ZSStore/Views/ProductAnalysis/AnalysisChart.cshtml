@model List<Entities.Models.ProductAnalysis>

@{
    ViewData["Title"] = "Veri Analizi GrafiÄŸi";
    var productName = Model.FirstOrDefault()?.Product?.ProductName ?? "Cihaz";
}

<div class="container mt-5">

    <h2>@productName - Ã–lÃ§Ã¼m GrafiÄŸi</h2>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center my-5">
            <i class="fa fa-exclamation-circle me-2"></i> HenÃ¼z Ã¶lÃ§Ã¼m verisi bulunmamaktadÄ±r. LÃ¼tfen Ã¶nce <strong>"Veri Analizi Yap"</strong> butonuna basÄ±nÄ±z.
        </div>
    }
    else
    {
        var max = Model.OrderByDescending(m => m.Value).FirstOrDefault();
        var min = Model.OrderBy(m => m.Value).FirstOrDefault();
        var avg = Model.Average(m => m.Value);
        var count = Model.Count;
    <text>
        <canvas id="analysisChart" height="100"></canvas>

        <div class="card shadow-sm mt-5">
            <div class="card-body">
                <h4 class="card-title mb-4">ðŸ“Š Temel Ä°statistiksel Analiz</h4>

                <div class="row text-center">
                    <div class="col-md-3 mb-3">
                        <div class="border rounded p-3 bg-light">
                            <div class="fw-bold">Toplam Ã–lÃ§Ã¼m</div>
                            <div class="fs-4 text-primary">@count</div>
                        </div>
                    </div>

                    <div class="col-md-3 mb-3">
                        <div class="border rounded p-3 bg-light">
                            <div class="fw-bold">Ortalama DeÄŸer</div>
                            <div class="fs-4 text-success">@avg.ToString("0.00")</div>
                        </div>
                    </div>

                    <div class="col-md-3 mb-3">
                        <div class="border rounded p-3 bg-light">
                            <div class="fw-bold">En YÃ¼ksek</div>
                            <div class="fs-5 text-danger">
                                @max?.Value.ToString("0.00") <br />
                                <small class="text-muted">@max?.Timestamp.ToString("g")</small>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3 mb-3">
                        <div class="border rounded p-3 bg-light">
                            <div class="fw-bold">En DÃ¼ÅŸÃ¼k</div>
                            <div class="fs-5 text-warning">
                                @min?.Value.ToString("0.00") <br />
                                <small class="text-muted">@min?.Timestamp.ToString("g")</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h4 class="mt-4">Analiz Verileri</h4>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Zaman</th>
                    <th>Ã–lÃ§Ã¼m DeÄŸeri</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in Model)
                {
                    <tr>
                        <td>@a.Timestamp</td>
                        <td>@a.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </text>
    }
</div>


<div class="text-center mt-5">
    <a href="javascript:history.back()" class="btn btn-outline-secondary px-4 py-2 shadow-sm">
        <i class="fa fa-arrow-left me-2"></i>Geri DÃ¶n
    </a>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    @if (Model != null && Model.Any())
    {
        <script>
            const ctx = document.getElementById('analysisChart').getContext('2d');
            const chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Timestamp.ToString("HH:mm:ss")))),
                    datasets: [{
                        label: 'Radyasyon DeÄŸeri',
                        data: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Value))),
                        borderColor: 'rgba(255, 193, 7, 1)',
                        backgroundColor: 'rgba(255, 193, 7, 0.2)',
                        fill: true,
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    }
}
